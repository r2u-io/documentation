import * as React from 'react';
import { LiveEditorProps as BaseLiveEditorProps } from 'react-live';
interface LiveEditorState {
    focusEditor: boolean;
}
export interface LiveEditorProps extends BaseLiveEditorProps {
}
/**
 * A wrapper around the default LiveEditor from react-live
 * Fixes focus state problems where mdx-deck and react-live don't get along
 * maybe not needed when this PR is merged:
 * https://github.com/FormidableLabs/react-live/pull/77
 *
 * Passes all valid params down to the LiveEditor from react-live
 */
export declare class LiveEditor extends React.PureComponent<LiveEditorProps, LiveEditorState> {
    state: {
        focusEditor: boolean;
    };
    focusEditor: () => void;
    blurEditor: () => void;
    /**
     * remove focus from editor when user presses one of:
     * - Escape
     * - CTRL + M (Windows and Linux)
     * - CTRL + SHIFT + M (Mac)
     * Mimicks Monaco edtor:
     * https://github.com/Microsoft/monaco-editor/wiki/Monaco-Editor-Accessibility-Guide#tab-trapping
     */
    blurOnKeyCombo: React.KeyboardEventHandler<HTMLDivElement>;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=live-editor.d.ts.map