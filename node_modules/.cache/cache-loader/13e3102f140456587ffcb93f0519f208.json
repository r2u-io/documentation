{"remainingRequest":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/babel-loader/lib/index.js??ref--9-1!/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/theme-classic/lib-next/theme/BlogTagsPostsPage/index.js","dependencies":[{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/theme-classic/lib-next/theme/BlogTagsPostsPage/index.js","mtime":1618498317278},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/cache-loader/dist/cjs.js","mtime":1618498311723},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/babel-loader/lib/index.js","mtime":1618498311676}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0IExheW91dCBmcm9tJ0B0aGVtZS9MYXlvdXQnO2ltcG9ydCBCbG9nUG9zdEl0ZW0gZnJvbSdAdGhlbWUvQmxvZ1Bvc3RJdGVtJztpbXBvcnQgTGluayBmcm9tJ0Bkb2N1c2F1cnVzL0xpbmsnO2ltcG9ydCBCbG9nU2lkZWJhciBmcm9tJ0B0aGVtZS9CbG9nU2lkZWJhcic7aW1wb3J0IFRyYW5zbGF0ZSx7dHJhbnNsYXRlfWZyb20nQGRvY3VzYXVydXMvVHJhbnNsYXRlJztpbXBvcnR7dXNlUGx1cmFsRm9ybX1mcm9tJ0Bkb2N1c2F1cnVzL3RoZW1lLWNvbW1vbic7Ly8gVmVyeSBzaW1wbGUgcGx1cmFsaXphdGlvbjogcHJvYmFibHkgZ29vZCBlbm91Z2ggZm9yIG5vdwpmdW5jdGlvbiB1c2VCbG9nUG9zdHNQbHVyYWwoKXtjb25zdHtzZWxlY3RNZXNzYWdlfT11c2VQbHVyYWxGb3JtKCk7cmV0dXJuIGNvdW50PT5zZWxlY3RNZXNzYWdlKGNvdW50LHRyYW5zbGF0ZSh7aWQ6J3RoZW1lLmJsb2cucG9zdC5wbHVyYWxzJyxkZXNjcmlwdGlvbjonUGx1cmFsaXplZCBsYWJlbCBmb3IgIntjb3VudH0gcG9zdHMiLiBVc2UgYXMgbXVjaCBwbHVyYWwgZm9ybXMgKHNlcGFyYXRlZCBieSAifCIpIGFzIHlvdXIgbGFuZ3VhZ2Ugc3VwcG9ydCAoc2VlIGh0dHBzOi8vd3d3LnVuaWNvZGUub3JnL2NsZHIvY2xkci1hdXgvY2hhcnRzLzM0L3N1cHBsZW1lbnRhbC9sYW5ndWFnZV9wbHVyYWxfcnVsZXMuaHRtbCknLG1lc3NhZ2U6J09uZSBwb3N0fHtjb3VudH0gcG9zdHMnfSx7Y291bnR9KSk7fWZ1bmN0aW9uIEJsb2dUYWdzUG9zdFBhZ2VUaXRsZSh7dGFnTmFtZSxjb3VudH0pe2NvbnN0IGJsb2dQb3N0c1BsdXJhbD11c2VCbG9nUG9zdHNQbHVyYWwoKTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2xhdGUse2lkOiJ0aGVtZS5ibG9nLnRhZ1RpdGxlIixkZXNjcmlwdGlvbjoiVGhlIHRpdGxlIG9mIHRoZSBwYWdlIGZvciBhIGJsb2cgdGFnIix2YWx1ZXM6e25Qb3N0czpibG9nUG9zdHNQbHVyYWwoY291bnQpLHRhZ05hbWV9fSwne25Qb3N0c30gdGFnZ2VkIHdpdGggInt0YWdOYW1lfSInKTt9ZnVuY3Rpb24gQmxvZ1RhZ3NQb3N0UGFnZShwcm9wcyl7Y29uc3R7bWV0YWRhdGEsaXRlbXMsc2lkZWJhcn09cHJvcHM7Y29uc3R7YWxsVGFnc1BhdGgsbmFtZTp0YWdOYW1lLGNvdW50fT1tZXRhZGF0YTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMYXlvdXQse3RpdGxlOmBQb3N0cyB0YWdnZWQgIiR7dGFnTmFtZX0iYCxkZXNjcmlwdGlvbjpgQmxvZyB8IFRhZ2dlZCAiJHt0YWdOYW1lfSJgLHdyYXBwZXJDbGFzc05hbWU6ImJsb2ctd3JhcHBlciIsc2VhcmNoTWV0YWRhdGFzOnsvLyBhc3NpZ24gdW5pcXVlIHNlYXJjaCB0YWcgdG8gZXhjbHVkZSB0aGlzIHBhZ2UgZnJvbSBzZWFyY2ggcmVzdWx0cyEKdGFnOidibG9nX3RhZ3NfcG9zdHMnfX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToiY29udGFpbmVyIG1hcmdpbi12ZXJ0LS1sZyJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InJvdyJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6ImNvbCBjb2wtLTMifSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCbG9nU2lkZWJhcix7c2lkZWJhcjpzaWRlYmFyfSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJtYWluIix7Y2xhc3NOYW1lOiJjb2wgY29sLS03In0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgxIixudWxsLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEJsb2dUYWdzUG9zdFBhZ2VUaXRsZSx7Y291bnQ6Y291bnQsdGFnTmFtZTp0YWdOYW1lfSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmsse2hyZWY6YWxsVGFnc1BhdGh9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zbGF0ZSx7aWQ6InRoZW1lLnRhZ3MudGFnc1BhZ2VMaW5rIixkZXNjcmlwdGlvbjoiVGhlIGxhYmVsIG9mIHRoZSBsaW5rIHRhcmdldGluZyB0aGUgdGFnIGxpc3QgcGFnZSJ9LCJWaWV3IEFsbCBUYWdzIikpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6Im1hcmdpbi12ZXJ0LS14bCJ9LGl0ZW1zLm1hcCgoe2NvbnRlbnQ6QmxvZ1Bvc3RDb250ZW50fSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEJsb2dQb3N0SXRlbSx7a2V5OkJsb2dQb3N0Q29udGVudC5tZXRhZGF0YS5wZXJtYWxpbmssZnJvbnRNYXR0ZXI6QmxvZ1Bvc3RDb250ZW50LmZyb250TWF0dGVyLG1ldGFkYXRhOkJsb2dQb3N0Q29udGVudC5tZXRhZGF0YSx0cnVuY2F0ZWQ6dHJ1ZX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQmxvZ1Bvc3RDb250ZW50LG51bGwpKSkpKSkpKTt9ZXhwb3J0IGRlZmF1bHQgQmxvZ1RhZ3NQb3N0UGFnZTs="},{"version":3,"sources":["/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/theme-classic/lib-next/theme/BlogTagsPostsPage/index.js"],"names":["React","Layout","BlogPostItem","Link","BlogSidebar","Translate","translate","usePluralForm","useBlogPostsPlural","selectMessage","count","id","description","message","BlogTagsPostPageTitle","tagName","blogPostsPlural","nPosts","BlogTagsPostPage","props","metadata","items","sidebar","allTagsPath","name","tag","map","content","BlogPostContent","permalink","frontMatter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,SAAP,EAAmBC,SAAnB,KAAmC,uBAAnC,CACA,OAAQC,aAAR,KAA4B,0BAA5B,CAAwD;AAExD,QAASC,CAAAA,kBAAT,EAA8B,CAC5B,KAAM,CAACC,aAAD,EAAkBF,aAAa,EAArC,CACA,MAAQG,CAAAA,KAAD,EACLD,aAAa,CACXC,KADW,CAEXJ,SAAS,CACP,CACEK,EAAE,CAAE,yBADN,CAEEC,WAAW,CACT,0MAHJ,CAIEC,OAAO,CAAE,wBAJX,CADO,CAOP,CACEH,KADF,CAPO,CAFE,CADf,CAeD,CAED,QAASI,CAAAA,qBAAT,CAA+B,CAACC,OAAD,CAAUL,KAAV,CAA/B,CAAiD,CAC/C,KAAMM,CAAAA,eAAe,CAAGR,kBAAkB,EAA1C,CACA,mBACE,oBAAC,SAAD,EACE,EAAE,CAAC,qBADL,CAEE,WAAW,CAAC,sCAFd,CAGE,MAAM,CAAE,CACNS,MAAM,CAAED,eAAe,CAACN,KAAD,CADjB,CAENK,OAFM,CAHV,EAOG,kCAPH,CADF,CAWD,CAED,QAASG,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,KAAM,CAACC,QAAD,CAAWC,KAAX,CAAkBC,OAAlB,EAA6BH,KAAnC,CACA,KAAM,CAACI,WAAD,CAAcC,IAAI,CAAET,OAApB,CAA6BL,KAA7B,EAAsCU,QAA5C,CACA,mBACE,oBAAC,MAAD,EACE,KAAK,CAAG,iBAAgBL,OAAQ,GADlC,CAEE,WAAW,CAAG,kBAAiBA,OAAQ,GAFzC,CAGE,gBAAgB,CAAC,cAHnB,CAIE,eAAe,CAAE,CACf;AACAU,GAAG,CAAE,iBAFU,CAJnB,eAQE,2BAAK,SAAS,CAAC,2BAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,WAAD,EAAa,OAAO,CAAEH,OAAtB,EADF,CADF,cAIE,4BAAM,SAAS,CAAC,YAAhB,eACE,2CACE,oBAAC,qBAAD,EAAuB,KAAK,CAAEZ,KAA9B,CAAqC,OAAO,CAAEK,OAA9C,EADF,CADF,cAIE,oBAAC,IAAD,EAAM,IAAI,CAAEQ,WAAZ,eACE,oBAAC,SAAD,EACE,EAAE,CAAC,yBADL,CAEE,WAAW,CAAC,mDAFd,kBADF,CAJF,cAWE,2BAAK,SAAS,CAAC,iBAAf,EACGF,KAAK,CAACK,GAAN,CAAU,CAAC,CAACC,OAAO,CAAEC,eAAV,CAAD,gBACT,oBAAC,YAAD,EACE,GAAG,CAAEA,eAAe,CAACR,QAAhB,CAAyBS,SADhC,CAEE,WAAW,CAAED,eAAe,CAACE,WAF/B,CAGE,QAAQ,CAAEF,eAAe,CAACR,QAH5B,CAIE,SAAS,KAJX,eAKE,oBAAC,eAAD,MALF,CADD,CADH,CAXF,CAJF,CADF,CARF,CADF,CAyCD,CAED,cAAeF,CAAAA,gBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Layout from '@theme/Layout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport Link from '@docusaurus/Link';\nimport BlogSidebar from '@theme/BlogSidebar';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {usePluralForm} from '@docusaurus/theme-common'; // Very simple pluralization: probably good enough for now\n\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {\n          count,\n        },\n      ),\n    );\n}\n\nfunction BlogTagsPostPageTitle({tagName, count}) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return (\n    <Translate\n      id=\"theme.blog.tagTitle\"\n      description=\"The title of the page for a blog tag\"\n      values={{\n        nPosts: blogPostsPlural(count),\n        tagName,\n      }}>\n      {'{nPosts} tagged with \"{tagName}\"'}\n    </Translate>\n  );\n}\n\nfunction BlogTagsPostPage(props) {\n  const {metadata, items, sidebar} = props;\n  const {allTagsPath, name: tagName, count} = metadata;\n  return (\n    <Layout\n      title={`Posts tagged \"${tagName}\"`}\n      description={`Blog | Tagged \"${tagName}\"`}\n      wrapperClassName=\"blog-wrapper\"\n      searchMetadatas={{\n        // assign unique search tag to exclude this page from search results!\n        tag: 'blog_tags_posts',\n      }}>\n      <div className=\"container margin-vert--lg\">\n        <div className=\"row\">\n          <div className=\"col col--3\">\n            <BlogSidebar sidebar={sidebar} />\n          </div>\n          <main className=\"col col--7\">\n            <h1>\n              <BlogTagsPostPageTitle count={count} tagName={tagName} />\n            </h1>\n            <Link href={allTagsPath}>\n              <Translate\n                id=\"theme.tags.tagsPageLink\"\n                description=\"The label of the link targeting the tag list page\">\n                View All Tags\n              </Translate>\n            </Link>\n            <div className=\"margin-vert--xl\">\n              {items.map(({content: BlogPostContent}) => (\n                <BlogPostItem\n                  key={BlogPostContent.metadata.permalink}\n                  frontMatter={BlogPostContent.frontMatter}\n                  metadata={BlogPostContent.metadata}\n                  truncated>\n                  <BlogPostContent />\n                </BlogPostItem>\n              ))}\n            </div>\n          </main>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogTagsPostPage;\n"]}]}