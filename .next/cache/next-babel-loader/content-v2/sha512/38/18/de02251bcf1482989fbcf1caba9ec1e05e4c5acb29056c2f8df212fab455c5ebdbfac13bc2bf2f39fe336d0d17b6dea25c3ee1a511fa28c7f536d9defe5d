{"ast":null,"code":"import _defineProperty from \"/home/felipe/real2u/r2u/documentation/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/felipe/real2u/r2u/documentation/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport GlobalStyle from '../styles/global';\nimport { ChallengesProvider } from '../contexts/ChallengesContext';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return /*#__PURE__*/_jsxDEV(ChallengesProvider, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/felipe/real2u/r2u/documentation/src/pages/_app.tsx"],"names":["React","GlobalStyle","ChallengesProvider","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;AAEA,MAAMC,KAAyB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAwC;AACxE,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMF,K;AASN,eAAeA,KAAf","sourcesContent":["import React from 'react'\n\nimport type { AppProps } from 'next/app'\nimport GlobalStyle from '../styles/global'\nimport { ChallengesProvider } from '../contexts/ChallengesContext'\n\nconst MyApp: React.FC<AppProps> = ({ Component, pageProps }: AppProps) => {\n  return (\n    <ChallengesProvider>\n      <GlobalStyle />\n      <Component {...pageProps} />\n    </ChallengesProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}