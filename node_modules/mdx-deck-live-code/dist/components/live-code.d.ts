/// <reference types="styled-components" />
import * as React from 'react';
import { LiveProviderProps } from 'react-live';
import { LiveEditorProps } from './live-editor';
import { OmitRef } from '../types';
interface Props {
    code?: string;
    title?: string;
    size?: Size;
    errors?: boolean;
    providerProps?: OmitRef<LiveProviderProps>;
    editorProps?: OmitRef<LiveEditorProps>;
    previewProps?: OmitRef<React.HTMLProps<HTMLDivElement>>;
    errorProps?: OmitRef<React.HTMLProps<HTMLDivElement>>;
}
declare type Size = 'small' | 'medium' | 'large' | 'fullscreen';
export declare const LiveCode: React.ForwardRefExoticComponent<Pick<Props & {
    theme: any;
} & {
    children?: React.ReactNode;
}, "size" | "title" | "children" | "code" | "errors" | "providerProps" | "editorProps" | "previewProps" | "errorProps"> & {
    theme?: any;
}>;
export {};
//# sourceMappingURL=live-code.d.ts.map