{"remainingRequest":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/babel-loader/lib/index.js??ref--12-1!/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/home/real2u/Mayara/Real2U/R2U/documentation-test/docs/3D-viewer.md","dependencies":[{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/docs/3D-viewer.md","mtime":1619197123410},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-3-d-viewer-md-b0c.json","mtime":1619197447141},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/cache-loader/dist/cjs.js","mtime":1618498311723},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/babel-loader/lib/index.js","mtime":1618498311676},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1618498320320},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1618498316949}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}