{"remainingRequest":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/babel-loader/lib/index.js??ref--9-1!/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/theme-classic/lib-next/theme/DocSidebar/index.js","dependencies":[{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/@docusaurus/theme-classic/lib-next/theme/DocSidebar/index.js","mtime":1618498317278},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/cache-loader/dist/cjs.js","mtime":1618498311723},{"path":"/home/real2u/Mayara/Real2U/R2U/documentation-test/node_modules/babel-loader/lib/index.js","mtime":1618498311676}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}